runApp('main')
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
mutate(n = as.numeric(n)) %>%
pie(n,
border="white", col=couleur_A4 )
runApp('main')
runApp('main')
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(n,
border="white", col=couleur_A4 )
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
pie(Prop$n,
border="white", col=couleur_A4 )
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(Prop$n,
border="white", col=couleur_A4 )
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(n,
border="white", col=couleur_A4 )
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(n,
border="white", col=couleur_A4 )
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(n)#,
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
pie(n)#,
# Graphique de l'évolution du nombre de films par an sur un genre donné
perimetre_A4()
runApp('main')
Prop <- data_enquete_A4 %>% # On repart de la fonction réactive
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
pie(Prop$n,
border="white", col=couleur_A4 )
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(A4_secteur= Secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(A4_secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(A4_secteur = test)
runApp('main')
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(test = A4_secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(test = A4_secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(effectif = n)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename(effectif = n)
glimpse(data_enquete_A4)
Prop <- data_enquete_A4 %>%
rename(effectif = n) %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
Prop <- data_enquete_A4 %>%
rename(effectif = A4_secteur) %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
Prop <- data_enquete_A4 %>%
rename(Secteur = A4_secteur) %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
Prop <- data_enquete_A4 %>%
dplyr:: rename(Secteur = A4_secteur) %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename(Secteur = A4_secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("Secteur d'activité"= A4_secteur)
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("Secteur d'activité"= "A4_secteur")
Prop
Prop <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("Secteur d'activité"= "A4_secteur") %>%
dplyr::rename("Effectif" = "n")
Prop
gc()
gc()
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
shiny::runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur))
temp
View(temp)
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
rename("secteur" = "A4_secteur")
View(temp)
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("secteur" = "A4_secteur")
View(temp)
data_enquete_A4 <- A4(data_enquete_base)
View(data_enquete_A4)
mean(c(10,7,9,7,8,7,7,10,10,6,6,6,6))
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("secteur"= "A4_secteur")
View(temp)
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
View(temp)
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur_autre) %>%
arrange(desc(n)) %>%
mutate(A4_secteur_autre = as_factor(A4_secteur_autre)) %>%
dplyr::rename("secteur"= "A4_secteur_autre")
View(temp)
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur_autre)) %>%
count(A4_secteur_autre) %>%
arrange(desc(n)) %>%
mutate(A4_secteur_autre = as_factor(A4_secteur_autre)) %>%
dplyr::rename("secteur"= "A4_secteur_autre")
View(temp)
runApp('main')
runApp('main')
runApp('main')
runApp('main')
mean(c(10,9,10,10,9,10,9,8,8,10,10,8,7,8,8,8))
mean(c(10,9,10,10,9,10,9,8,8,10,10,8,7,8,8))
mean(c(10,9,10,10,9,10,9,8,8,10,10,8,8,8,8))
mean(c(10,9,10,10,9,10,9,8,8,10,10,8,8,8,8,8))
mean(c(10,9,10,10,9,10,9,8,8,10,10))
runApp('main')
temp <- data_enquete_A4 %>%
filter(!is.na(A4_secteur_autre)) %>%
count(A4_secteur_autre) %>%
arrange(desc(n)) %>%
mutate(A4_secteur_autre = as_factor(A4_secteur_autre)) %>%
dplyr::rename("Secteur"= "A4_secteur_autre")
View(temp)
git
shiny::runApp('main')
View(temp)
View(data_enquete_A4)
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
condition_fusion <- str_detect(data_enquete_A4$A4_secteur, "Autre")
condition_fusion
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
A4_allinone <- function(origin){
a <- 0
new <- origin
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
for (i in condition_fusion){
a <- a+1
if (is.na(i)){
}else{
if(i){
new$A4_secteur[a] <-  new$A4_secteur_autre[a]
}
}
}
}
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4_fusion)
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4)
_fusion
View(data_enquete_A4_fusion)
A4_allinone <- function(origin){
a <- 0
new <- origin
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
for (i in condition_fusion){
a <- a+1
if (is.na(i)){
}else{
if(i){
new$A4_secteur[a] <-  "new$A4_secteur_autre[a]"
}
}
}
}
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4_fusion)
### Question A4 ###
A4 <- function(origin){
new <- origin %>%
select(id, date, A4_secteur, A4_secteur_autre) %>%
arrange(id)
}
data_enquete_A4 <- A4(data_enquete_base)
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4_fusion)
str_detect(data_enquete_A4$A4_secteur, "Autre")
A4_allinone <- function(origin){
a <- 0
new <- origin
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
for (i in condition_fusion){
a <- a+1
if (is.na(i)){
}else{
if(i){
new$A4_secteur[a] <-  "new$A4_secteur_autre[a]"
}
}
}
return(new)
}
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4_fusion)
A4_allinone <- function(origin){
a <- 0
new <- origin
condition_fusion <- str_detect(origin$A4_secteur, "Autre")
for (i in condition_fusion){
a <- a+1
if (is.na(i)){
}else{
if(i){
new$A4_secteur[a] <-  new$A4_secteur_autre[a]
}
}
}
return(new)
}
data_enquete_A4_fusion <- A4_allinone(data_enquete_A4)
View(data_enquete_A4_fusion)
runApp('main')
temp <- data_enquete_A4_fusion %>%
filter(!is.na(A4_secteur)) %>%
count(A4_secteur) %>%
arrange(desc(n)) %>%
mutate(A4_secteur = as_factor(A4_secteur)) %>%
dplyr::rename("Secteur"= "A4_secteur")
View(temp)
View(data_enquete_A4_fusion)
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
fluidPage(
theme = shinytheme("cerulean"),
themeSelector(),
# Insertion d'image
img(src = "Résultats-denquête.png",
height = "100x"),
# Application title
titlePanel("Résultats d'enquête"),
# Page n°1
navbarPage(
"Questions",
tabPanel("A4 - Secteurs d'activité",
sidebarLayout(
sidebarPanel(
h2("Dans quel secteur travaillez-vous ?"),  # titre de la question
actionButton("secteur1", "Secteurs principaux"),
actionButton("secteur2", "Autres secteurs"),
actionButton("secteur3", "Tous les secteurs"),
hr(),
),
mainPanel(tabsetPanel(
tabPanel("Graphique", plotOutput("plot_A4")),
tabPanel("Camembert", plotOutput("plot_pie_A4")),
tabPanel("Tableau", tableOutput("table_A4"))
))
)),
tabPanel("A5", "C'est moi qui ai fait ça!!"),
tabPanel("A6", "C'est moi qui ai fait ça!!"),
tabPanel("B2", "C'est moi qui ai fait ça!!")
)
)
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
shiny::runApp('main')
runApp('main')
View(data_enquete_base)
################################ Question A6 ###################################
A6 <- function(origin){
new <- origin %>%
select(id, date, A6_experience) %>%
arrange(id)
}
data_enquete_A6 <- A6(data_enquete_base)
View(data_enquete_A6)
runApp('main')
View(data_enquete_A6)
runApp('main')
runApp('main')
runApp('main')
temp <- data_enquete_A6 %>%
filter(!is.na(A6_experience)) %>%
count(A6_experience) %>%
arrange(desc(A6_experience)) %>%
mutate(A6_experience = as_factor(A6_experience)) %>%
dplyr::rename("Experience"= "A6_experience")
View(temp)
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
shiny::runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
runApp('main')
